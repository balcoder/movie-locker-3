{"version":3,"sources":["magnifying-glass.svg","components/Header.js","components/GenreList.js","components/Home.js","movie-locker.config.js","helpers/helper.js","components/Movie.js","components/Content.js","components/Footer.js","helpers/api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","useState","selected","setSelected","searchTerm","setSearchTerm","toHome","setToHome","useEffect","to","className","href","onSubmit","event","preventDefault","handleSearch","type","placeholder","value","onChange","target","src","searchIcon","alt","defaultValue","handleSelect","GenreList","links","genreIds","map","val","index","key","id","data-id","exact","activeClassName","data-genre-id","name","Home","state","popular","currentView","prevProps","undefined","this","params","handleUpdateView","pageNumbers","i","numPages","push","parseInt","currentPage","onClick","handleClickPage","renderPagelinks","movies","filter","movie","poster_path","title","original_title","Component","KEY","getPage","pageNum","arr","length","find","page","results","ENDURL","IMGURL","Movie","match","history","movieId","setMovie","movieUrl","setMovieUrl","imageUrl","setImageUrl","gotMovie","setGotMovie","getMovie","a","fetch","then","res","json","videos","style","backdrop_path","backgroundImage","backgoundColor","overview","vote_average","runtime","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","Number","toFixed","toString","j","substr","replace","slice","e","console","log","formatMoney","budget","goBack","rel","Content","path","render","routeProps","thisYear","Date","getFullYear","Footer","width","height","APIURL","GENRESURL","GENREURL","POPULARURL","TOPRATEDURL","SEARCHURL","INCINEMANOW","UPCOMING","handleError","ok","status","data","errorMessage","message","getGenre","getGenres","promises","page_results","pages","total_pages","Promise","all","getPopular","getSearch","phrase","getSelected","term","url","App","currentViewList","loadPopular","loadGenreIds","bind","apiCalls","setState","error","genres","genreList","searchResults","page1","selectedResults","nextView","loadGenresWithIds","loadSearchResults","loadSelected","handleReload","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e3d15fe5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.f9737d3e.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport searchIcon from '../magnifying-glass.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Header(props) {\r\n  //using array destructuring to give different names to state variables\r\n  const [selected, setSelected] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [toHome, setToHome] = useState(false); \r\n  \r\n  function onChangeSelect(event) {\r\n    setSelected(event.target.value);   \r\n    props.handleSelect( event.target.value);\r\n    setToHome(true);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.handleSearch(searchTerm);\r\n    setToHome(true);\r\n  }\r\n\r\n  function onSearch(event) {\r\n    event.preventDefault();\r\n    setSearchTerm(event.target.value);    \r\n  }\r\n\r\n  //useEffect serves the same purpose as componentDidMount, componentDidUpdate, and componentWillUnmount in React classes\r\n  useEffect(() => {    \r\n    return () => {      \r\n      setToHome(false);\r\n    };\r\n  });\r\n  \r\n  // Redirect to Home component if movie search or selected drop down is performed  \r\n  if(toHome) {\r\n    return <Redirect to='/' />\r\n  }\r\n \r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\"><a href=\"/\">Movie<span>Locker</span></a></div>      \r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search__input\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={onSearch}/>\r\n        <button \r\n          type=\"submit\"\r\n          className=\"search__button\"\r\n          >\r\n          <img src={searchIcon} className=\"search__icon\" alt=\"\"/>          \r\n          </button>\r\n      </form>\r\n        <form className=\"select-form\">         \r\n          <select className=\"select-view\" defaultValue={selected} onChange={onChangeSelect}>            \r\n            <option value=\"In Cinema Now\">In Cinema</option>\r\n            <option value=\"Top Rated\">Top Rated</option>             \r\n            <option value=\"Upcoming\">Upcoming</option>\r\n          </select>         \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  handleSelect: PropTypes.func,\r\n  handleSearch: PropTypes.func,\r\n  handleSubmit: PropTypes.func\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction GenreList({ genreIds }) {       \r\n  let links = genreIds.map((val, index) => {\r\n    if(index === 0) {\r\n      return (\r\n        <li\r\n         key={val.id}\r\n         data-id={val.id}\r\n         >\r\n        <NavLink \r\n        exact to={`/genre/${val.id}`}\r\n        activeClassName=\"active\"\r\n        className=\"genre-link\"    \r\n        data-genre-id={val.id}    \r\n        >\r\n        {val.name}\r\n        </NavLink> \r\n        </li>\r\n        )\r\n    } else {\r\n      return (\r\n        <li\r\n         key={val.id}\r\n         data-id={val.id}\r\n         >\r\n        <NavLink \r\n        exact to={`/genre/${val.id}`}       \r\n        className=\"genre-link\"    \r\n        data-genre-id={val.id}    \r\n        >\r\n        {val.name}\r\n        </NavLink> \r\n        </li>\r\n        )\r\n    }\r\n  })\r\n  return (\r\n    <div className=\"genre-list\">        \r\n      <ul>{links}</ul>             \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nGenreList.propTypes = {\r\n  genreIds: PropTypes.arrayOf(PropTypes.object)\r\n}\r\nexport default GenreList;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Zoom } from 'react-reveal';\r\n\r\nconst baseUrlW154 = \"http://image.tmdb.org/t/p/w154/\";\r\n\r\nclass Home extends Component {\r\n constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     popular: [],\r\n     currentView: []     \r\n   }   \r\n }\r\n\r\n  componentDidUpdate(prevProps) {  \r\n    if(this.props.params.id === undefined || this.props.params.id === prevProps.params.id) {   \r\n      return;\r\n    }  \r\n    this.props.handleUpdateView(this.props.params.id); \r\n  }\r\n\r\n  renderPagelinks() {   \r\n    let pageNumbers = [];\r\n    for(let i = 1; i <= this.props.numPages; i++) {         \r\n      pageNumbers.push(\r\n        <li        \r\n        className={parseInt(this.props.currentPage) === i ? 'li-page-num li-page-num__active' : 'li-page-num'}\r\n        key={`${i}-${this.props.currentPage}`}\r\n        id={i}\r\n        onClick={this.props.handleClickPage}\r\n      ><span className=\"span-page-num\">{i}</span></li>\r\n      )\r\n    }\r\n    return (pageNumbers);\r\n  }\r\n\r\n  render() {    \r\n    let pageNumbers = this.renderPagelinks();    \r\n    let noBlankImages = this.props.currentView.filter(movie => movie.poster_path);    \r\n    let movies = noBlankImages.map((movie) => {\r\n    return (       \r\n      <li \r\n      className=\"gallery-item\"\r\n      key={movie.id}\r\n      >\r\n        <Link to={`/movie/${movie.id}`}>\r\n        <img\r\n          src={`${baseUrlW154}${movie.poster_path}`}\r\n          alt={`${movie.title} cover`}\r\n          className=\"gallery-img\"\r\n          />\r\n        <p className=\"gallery-caption\">{movie.original_title}</p>\r\n        </Link>        \r\n        \r\n      </li>        \r\n      );\r\n    }); \r\n    return (\r\n      <Zoom >\r\n        <div className=\"movie-gallery\">\r\n          <ul className=\"pageLinks\">\r\n            {pageNumbers}\r\n          </ul>\r\n          <ul className=\"gallery\">\r\n            {movies}\r\n          </ul>          \r\n      </div>\r\n      </Zoom>      \r\n    );\r\n  }  \r\n}\r\n\r\nexport default Home;","export const KEY = '16c19602a7121938cf7c160b35c37cea';","// returns an array of movies given an array of objs and a page num\r\nexport default function getPage(pageNum, arr) { \r\n  if(arr.length === 0  ) {\r\n    return;\r\n  }  \r\n  let pageResult = arr.find(val => val.page === parseInt(pageNum, 10)); \r\n  return pageResult.results;\r\n}\r\n\r\nexport function formatMoney(amount, decimalCount = 2, decimal = \".\", thousands = \",\") {\r\n  try {\r\n    decimalCount = Math.abs(decimalCount);\r\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\r\n    const negativeSign = amount < 0 ? \"-\" : \"\";\r\n    let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\r\n    let j = (i.length > 3) ? i.length % 3 : 0;\r\n    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { KEY } from '../movie-locker.config';\r\nimport { formatMoney } from '../helpers/helper';\r\n\r\n\r\nconst BASEURL = \"https://api.themoviedb.org/3/movie/\";\r\nconst ENDURL = `?api_key=${KEY}&language=en-US`;\r\nconst IMGURL = \"http://image.tmdb.org/t/p/\";\r\n// const POSTERSIZES = {\r\n//   posterSizes: [\r\n//   \"w92\",\r\n//   \"w154\",\r\n//   \"w185\",\r\n//   \"w342\",\r\n//   \"w500\",\r\n//   \"w780\",\r\n//   \"original\"] \r\n// };\r\nfunction Movie({ match, history}) {\r\n  \r\n  const movieId = match.params.id;\r\n\r\n  // the useState hook is a way to provide state to functional components\r\n  const [movie, setMovie] = useState([]); \r\n  const [movieUrl, setMovieUrl] = useState('');\r\n  const [imageUrl, setImageUrl ] = useState('');\r\n  const [gotMovie, setGotMovie ] = useState(false);\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {    \r\n    getMovie(movieId);\r\n  });  \r\n\r\n  const getMovie = async (id) => { \r\n    if(gotMovie) {\r\n      return;\r\n    }   \r\n    let movie = await fetch(`${BASEURL}${id}${ENDURL}&append_to_response=videos`).then(res => res.json());\r\n    //let imageUrl = `--image-url: url(&quot;${IMGURL}w1280${movie.backdrop_path};)`\r\n    //let imgaeUrl2 = `${IMGURL}w1280${movie.backdrop_path}` \r\n    \r\n    if(movie.videos.results.length < 1) {\r\n      setMovieUrl(''); \r\n    } else {\r\n    let movieUrl =  `https://www.youtube.com/watch?v=${movie.videos.results[0].key}`;\r\n    setMovieUrl(movieUrl); \r\n    } \r\n    setImageUrl(imageUrl);      \r\n    setMovie(movie);\r\n    setGotMovie(true);\r\n\r\n  }\r\n \r\n    return (    \r\n      <div className=\"movie-container\"  >     \r\n      <div className=\"movie-container__background\" style={movie.backdrop_path ? {backgroundImage: `url(${IMGURL}w1280${movie.backdrop_path})` } : {backgoundColor: 'white'}}></div>\r\n        <div className=\"movie-container__overlay\"></div>      \r\n        <div className=\"movie-container__content\">         \r\n            <h1>{movie.title}</h1>\r\n            <p>{movie.overview}</p>                       \r\n          \r\n          <div className=\"movie-mid-section\">            \r\n            <img className=\"movie-img\" src={movie.poster_path ?  `${IMGURL}w342${movie.poster_path}` : \"\" } alt=\"movie poster\" />\r\n            <div className=\"movie-stats\">\r\n              <div>{`Rating: ${movie.vote_average}`}</div>\r\n              <div>{`Runtime: ${movie.runtime}`}</div>\r\n              <div>{`Budget: $${formatMoney(movie.budget)}`}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"movie-buttons\">\r\n              <button\r\n                className=\"btn\"\r\n                onClick={history.goBack}\r\n                >\r\n              Go Back\r\n              </button>\r\n              {movieUrl && <button className=\"btn\">\r\n              <a href={movieUrl} target=\"_blank\"  rel=\"noopener noreferrer\">Trailer</a>\r\n              </button> }                      \r\n            </div>          \r\n        </div>       \r\n      </div>   \r\n    \r\n  ); \r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { Switch,  Route } from \"react-router-dom\";\r\nimport GenreList from './GenreList';\r\nimport Home from './Home';\r\nimport Movie from './Movie';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Content( props ) {\r\n  return (\r\n    <div className=\"content\">   \r\n      <GenreList\r\n      {...props}\r\n       />\r\n      <Switch>\r\n        <Route  exact path=\"/\" render={({match }) => (\r\n              <Home\r\n              {...match}\r\n              {...props} />\r\n            )}\r\n          />       \r\n        <Route  path=\"/genre/:id\" render={({match }) => (\r\n              <Home\r\n              {...match}\r\n              {...props}/>\r\n            )}\r\n          />      \r\n        <Route path=\"/movie/:id\" render={(routeProps) => (\r\n              <Movie \r\n              {...routeProps}\r\n              props />\r\n            )}\r\n          />           \r\n      </Switch>     \r\n      </div>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  popular: PropTypes.arrayOf(PropTypes.object),\r\n  currentView: PropTypes.arrayOf(PropTypes.object),\r\n  genreIds: PropTypes.arrayOf(PropTypes.object),\r\n  numPages: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  handleClickPage:  PropTypes.func, \r\n  handleUpdateView:  PropTypes.func, \r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nlet thisYear = new Date().getFullYear();\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-logo\">\r\n        <img src=\"https://www.themoviedb.org/assets/2/v4/logos/primary-green-d70eebe18a5eb5b166d5c1ef0796715b8d1a2cbc698f96d311d62f894ae87085.svg\" alt=\"The Movie Database (TMDb)\" width=\"81\" height=\"72\"/>\r\n        <div className=\"tmdb-copyright\">\r\n        This product uses the TMDb API but is not endorsed or certified by TMDb\r\n        </div>\r\n      </div>\r\n     \r\n      <div className=\"copyright\">\r\n      Created by Des Barrett &copy; {thisYear}. All Rights Reserved.\r\n      </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import { KEY } from '../movie-locker.config';\r\nconst APIURL = 'https://api.themoviedb.org/3/';\r\nconst GENRESURL = `${APIURL}genre/movie/list?api_key=${KEY}&language=en-US&include_adult=false&page=1`;\r\nconst GENREURL = `${APIURL}discover/movie?api_key=${KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=`;\r\nconst POPULARURL = `${APIURL}discover/movie?api_key=${KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=`;\r\nconst INNOWURL = `${APIURL}discover/movie?api_key=${KEY}&language=en-US&region=US&release_date.gte=2020-02-19&release_date.lte=2020-03-19&with_release_type=3|2;`\r\nconst TOPRATEDURL = `${APIURL}movie/top_rated?api_key=${KEY}&language=en-US&page=1`\r\nconst SEARCHURL = `${APIURL}search/movie?api_key=${KEY}&language=en-US&include_adult=false`\r\nconst INCINEMANOW =`${APIURL}discover/movie?api_key=${KEY}&language=en-US&region=US&release_date.gte=2020-02-19&release_date.lte=2020-03-19&with_release_type=3|2;`;\r\nconst UPCOMING = `${APIURL}movie/upcoming?api_key=${KEY}`;\r\n\r\n//hand the response from our async fetch to handleError\r\nfunction handleError(res) {\r\n  if(!res.ok) {\r\n    // if between 400 and 499 client side problem 400:Bad Request 401 (Unauthorized) 403 (Forbidden)\r\n    if(res.status >= 400 && res.status < 500) {\r\n      return res.json().then(data => {\r\n        let err = { errorMessage: data.message };\r\n        throw err;\r\n      })\r\n    } else {\r\n      // 500 (Internal Server Error) 501 (Not Implemented)\r\n      let err = { errorMessage: 'Please try later: Server problem' }\r\n      throw err;\r\n    }\r\n  }  \r\n  return res.json();\r\n}\r\n\r\n// get list of genres with their ids\r\nexport async function getGenre() {  \r\n  return fetch(GENRESURL)    \r\n    .then(res => handleError(res))\r\n}\r\n\r\n// get a list of movies with a genre id (like 'Action' = 27)\r\nexport async function getGenres(id) {\r\n  let promises = [];\r\n  // Get the number of pages from the search term\r\n  let page_results = await fetch(`${GENREURL}1&with_genres=${id}`)\r\n    .then(res => handleError(res));\r\n  let pages = page_results.total_pages;\r\n  let numPages = pages < 10 ? pages : 10;  \r\n  for(let i = 1; i <= numPages; i++) {     \r\n    promises.push(fetch(`${GENREURL}${i}&with_genres=${id}`)\r\n        .then(res => handleError(res)))\r\n  }\r\n  return Promise.all(promises);\r\n}\r\n\r\n// Get a number of pages of popular movies\r\nexport async function getPopular() {\r\n  let promises = [];\r\n  // Get the number of pages from the search term\r\n  let page_results = await fetch(POPULARURL + 1)\r\n    .then(res => handleError(res));\r\n  let pages = page_results.total_pages;\r\n  let numPages = pages < 10 ? pages : 10;\r\n  for(let i = 1; i <= numPages; i++) {\r\n  \r\n    promises.push(fetch(POPULARURL + i )\r\n      .then(res => handleError(res)))\r\n  }\r\n  return Promise.all(promises);  \r\n}\r\n\r\n// Get a  list of movies based on search term\r\nexport async function getSearch(phrase) {\r\n  let promises = [];\r\n  // Get the number of pages from the search term\r\n  let page_results = await fetch(`${SEARCHURL}&page=1&query=${phrase}`)\r\n    .then(res => handleError(res));  \r\n  let pages = page_results.total_pages;\r\n  let numPages = pages < 10 ? pages : 10;\r\n  for(let i = 1; i <= numPages; i++) {\r\n    promises.push(fetch(`${SEARCHURL}&page=${i}&query=${phrase}`)\r\n      .then(res => handleError(res)))\r\n  }    \r\n  return Promise.all(promises);\r\n}\r\n\r\nexport async function getInTheCinemaNow() {\r\n  return fetch(`${INNOWURL}`)\r\n    .then(res => handleError(res))\r\n}\r\n\r\nexport async function getSelected(term) {\r\n  \r\n  let url = '';\r\n  switch (term) {\r\n    case 'Top Rated':\r\n      url = TOPRATEDURL;      \r\n      break;\r\n    case 'In Cinema Now':\r\n      url = INCINEMANOW;     \r\n      break;\r\n    case 'Upcoming':\r\n      url = UPCOMING;      \r\n      break;\r\n    default:\r\n      url = TOPRATEDURL;     \r\n  }  \r\n  let promises = []; \r\n  // Get the number of pages from the search term\r\n  let page_results = await fetch(url)\r\n    .then(res => handleError(res));    \r\n  let pages = page_results.total_pages;\r\n  let numPages = pages < 10 ? pages : 10;\r\n  for(let i = 1; i <= numPages; i++) {\r\n    promises.push(fetch(`${url}&page=${i}`)\r\n    .then(res => handleError(res)))\r\n  }    \r\n  return Promise.all(promises);\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\nimport getPage from '../helpers/helper';\r\nimport * as apiCalls from '../helpers/api';\r\nimport '../scss/App.scss';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {      \r\n      currentViewList: [],\r\n      currentView: [],\r\n      genreIds: [],\r\n      currentPage: 1,\r\n      numPages: 1,\r\n      selected: null\r\n    }\r\n    // initial state setup\r\n    this.loadPopular();\r\n    this.loadGenreIds();\r\n    // bind handlers\r\n    this.handleClickPage = this.handleClickPage.bind(this);\r\n    this.handleUpdateView = this.handleUpdateView.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    \r\n\r\n  }\r\n  // Get initial view of popular movies\r\n  async loadPopular() {\r\n    try {\r\n      //getPopular returns Promise.all with each page of 20 movies     \r\n      let currentViewList =  await apiCalls.getPopular(); \r\n      let numPages = currentViewList.length;           \r\n      let currentView = getPage(this.state.currentPage, currentViewList);           \r\n      this.setState({ currentView, currentViewList , numPages});\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async loadGenreIds() {\r\n    try {\r\n      let genreIds = await apiCalls.getGenre();\r\n      this.setState({ genreIds: genreIds.genres});\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  } \r\n  \r\n    // get a list of movies with a genre id\r\n  async loadGenresWithIds(id) {\r\n    try {       \r\n      let genreList =  await apiCalls.getGenres(id);\r\n      let numPages = genreList.length;\r\n      let currentPage = 1;      \r\n      let currentView = getPage(currentPage, genreList);\r\n      this.setState({currentView, currentViewList: genreList, numPages, currentPage })\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async loadSearchResults(phrase) {\r\n    try {\r\n      let searchResults = await apiCalls.getSearch(phrase);\r\n      let numPages = searchResults.length;\r\n      let page1 = searchResults[0].results;     \r\n      this.setState({\r\n        currentViewList: searchResults,\r\n        currentView: page1,\r\n        numPages})\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async loadSelected(term) {    \r\n    let selectedResults  = await apiCalls.getSelected(term);    \r\n    let numPages = selectedResults.length;\r\n    let page1 = selectedResults[0].results;    \r\n    this.setState({\r\n      currentViewList: selectedResults,\r\n      currentView: page1,\r\n      numPages\r\n    })\r\n  }\r\n\r\n  handleClickPage(e) {\r\n      let pageNum = e.target.id;            \r\n      let nextView = getPage(pageNum, this.state.currentViewList);      \r\n      this.setState({currentPage: parseInt(pageNum, 10), currentView: nextView});      \r\n    }\r\n    \r\n    handleUpdateView(id) {\r\n      this.loadGenresWithIds(id);      \r\n    }\r\n\r\n    handleSearch(phrase) {\r\n      this.loadSearchResults(phrase);    \r\n      \r\n    }\r\n\r\n    handleSelect(term) {\r\n      this.loadSelected(term);\r\n      this.setState({currentPage: 1});\r\n    }\r\n  \r\n\r\n  componentDidMount()  {\r\n    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n       <Header\r\n       handleSearch={this.handleSearch}\r\n       handleSelect={this.handleSelect}\r\n       handleReload={this.loadPopular}\r\n       />\r\n       <Content       \r\n        popular={this.state.currentViewList}\r\n        currentView={this.state.currentView}\r\n        genreIds={this.state.genreIds}\r\n        numPages={this.state.numPages}\r\n        currentPage={this.state.currentPage}\r\n        handleClickPage={this.handleClickPage}\r\n        handleUpdateView={this.handleUpdateView}\r\n        />        \r\n       <Footer />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './scss/index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<Router>\r\n  <App />\r\n</Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}